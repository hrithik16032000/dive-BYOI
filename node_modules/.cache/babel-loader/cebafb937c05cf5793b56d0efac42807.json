{"ast":null,"code":"var _jsxFileName = \"/home/hrithik-gavankar/Hrithik/Hackathon_Team_DOPA/health_luminous/client/src/Pages/Stream.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nimport \"./Stream.css\";\nimport { Col, Row, Container, Card, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stream = () => {\n  _s();\n\n  const [playlistIds, setplaylistIds] = useState(null);\n  const [tracks, setTracks] = useState(null);\n  const [vibes, setVibes] = useState(null);\n  const [recents, setRecents] = useState(null);\n\n  const getplaylistIds = () => {\n    axios.get(config.api.url + \"/user/profile\", {\n      headers: {\n        Authorization: localStorage.getItem(\"jtoken\")\n      }\n    }).then(response => {\n      if (response.status === 200) setplaylistIds(response.data.profile.playlists);else throw Error(\"server request not success\");\n    }).catch(err => {\n      alert(err.toString());\n    });\n  };\n\n  const getPlaylistTracks = () => {\n    axios.get(config.api.url + \"/streams/tracks\", {\n      headers: {\n        Authorization: localStorage.getItem(\"jtoken\")\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        if (response.data.tracks.length < 1) throw Error(\"you don't have any tracks\");\n        setTracks(response.data.tracks);\n      } else throw Error(\"server request not success\");\n    }).catch(err => {\n      alert(err.toString());\n    });\n  };\n\n  const getRecent = () => {\n    axios.get(config.api.url + \"/streams/recent\", {\n      headers: {\n        Authorization: localStorage.getItem(\"jtoken\")\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.status === 200) {\n        setVibes(response.data.vibes);\n        setRecents(response.data.tracks);\n      } else throw Error(\"server request not success\");\n    }).catch(err => {\n      alert(err.toString());\n    });\n  };\n\n  useEffect(() => {\n    if (playlistIds) {\n      getPlaylistTracks();\n      getRecent();\n    }\n  }, [playlistIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"stream-page\",\n    children: [!localStorage.getItem(\"jtoken\") ? window.location.href = \"/login\" : null, /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Streams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Access your music profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button-36\",\n                    onClick: getplaylistIds,\n                    children: \"Refresh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: playlistIds && /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"Your Playlists\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: playlistIds.map((pl, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: pl.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 49\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 45\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: tracks && /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"Your Tracks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: tracks.map((tr, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [tr.name, tr.artists.map((art, x) => {\n                            return /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: [art, \" \"]\n                            }, x, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 154,\n                              columnNumber: 65\n                            }, this);\n                          })]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 49\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 45\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: recents && /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"Recently Played\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: recents.map((tr, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: tr\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 49\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 45\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: vibes && /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"Your Vibes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"danceability : \", vibes.danceability]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"acousticness : \", vibes.acousticness]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"energy : \", vibes.energy]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Stream, \"HYcGGWwPSSqjW1hIBxHoDi+gRVs=\");\n\n_c = Stream;\nexport default Stream;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"sources":["/home/hrithik-gavankar/Hrithik/Hackathon_Team_DOPA/health_luminous/client/src/Pages/Stream.js"],"names":["React","useEffect","useState","axios","config","Col","Row","Container","Card","ListGroup","Stream","playlistIds","setplaylistIds","tracks","setTracks","vibes","setVibes","recents","setRecents","getplaylistIds","get","api","url","headers","Authorization","localStorage","getItem","then","response","status","data","profile","playlists","Error","catch","err","alert","toString","getPlaylistTracks","length","getRecent","console","log","window","location","href","width","map","pl","index","name","tr","artists","art","x","danceability","acousticness","energy"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nimport \"./Stream.css\";\nimport { Col, Row, Container, Card, ListGroup } from \"react-bootstrap\";\n\nconst Stream = () => {\n    const [playlistIds, setplaylistIds] = useState(null);\n    const [tracks, setTracks] = useState(null);\n    const [vibes, setVibes] = useState(null);\n    const [recents, setRecents] = useState(null);\n\n    const getplaylistIds = () => {\n        axios\n            .get(config.api.url + \"/user/profile\", {\n                headers: {\n                    Authorization: localStorage.getItem(\"jtoken\"),\n                },\n            })\n            .then((response) => {\n                if (response.status === 200)\n                    setplaylistIds(response.data.profile.playlists);\n                else throw Error(\"server request not success\");\n            })\n            .catch((err) => {\n                alert(err.toString());\n            });\n    };\n\n    const getPlaylistTracks = () => {\n        axios\n            .get(config.api.url + \"/streams/tracks\", {\n                headers: {\n                    Authorization: localStorage.getItem(\"jtoken\"),\n                },\n            })\n            .then((response) => {\n                if (response.status === 200) {\n                    if (response.data.tracks.length < 1)\n                        throw Error(\"you don't have any tracks\");\n                    setTracks(response.data.tracks);\n                } else throw Error(\"server request not success\");\n            })\n            .catch((err) => {\n                alert(err.toString());\n            });\n    };\n\n    const getRecent = () => {\n        axios\n            .get(config.api.url + \"/streams/recent\", {\n                headers: {\n                    Authorization: localStorage.getItem(\"jtoken\"),\n                },\n            })\n            .then((response) => {\n                console.log(response);\n                if (response.status === 200) {\n                    setVibes(response.data.vibes);\n                    setRecents(response.data.tracks);\n                } else throw Error(\"server request not success\");\n            })\n            .catch((err) => {\n                alert(err.toString());\n            });\n    };\n\n    useEffect(() => {\n        if (playlistIds) {\n            getPlaylistTracks();\n            getRecent();\n        }\n    }, [playlistIds]);\n\n    return (\n        <div id=\"stream-page\">\n\n            {!localStorage.getItem(\"jtoken\")\n                ? (window.location.href = \"/login\")\n                : null}\n\n    \n            <Container>\n               <div> \n                <Row>\n                    <h1> Streams</h1>\n                    <Col>\n                        <div className=\"card\">\n                            <div className=\"box\">\n                                <div className=\"content\">\n                                    <h3>Access your music profile</h3>\n                                    {/* <button onClick={getplaylistIds}>Refresh</button> */}\n                                    <button\n                                        className=\"button-36\"\n                                        onClick={getplaylistIds}\n                                    >\n                                        Refresh\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n               </div>     \n\n                    <div>\n\n                    </div>\n\n\n                    <div>\n                        <Row>\n                            <Col>\n                            {/* PLAYLIST SECTION */}\n                                    {playlistIds && (\n                                        <Card style={{ width: \"18rem\" }}>\n                                        <Card.Header>Your Playlists</Card.Header>\n                                        <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                <ul>\n                                    {playlistIds.map((pl, index) => {\n                                        return (\n                                            <li key={index}>\n                                                <p>{pl.name}</p>\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                                </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n\n                            )}\n                        </Col>    \n                            \n                        \n                            {/* PLAYLIST SECTION */}\n                        <Col>\n                                    {tracks && (\n                                        <Card style={{ width: \"18rem\" }}>\n                                        <Card.Header>Your Tracks</Card.Header>\n                                        <ListGroup variant=\"flush\">\n                                            <ListGroup.Item>\n                                <ul>\n                                    {tracks.map((tr, index) => {\n                                        return (\n                                            \n                                            <li key={index}>\n                                                <p>\n                                                    {tr.name}\n                                                    {tr.artists.map(\n                                                        (art, x) => {\n                                                            return (\n                                                                <span key={x}>\n                                                                    {art}{\" \"}\n                                                                </span>\n                                                            );\n                                                        }\n                                                    )}\n                                                </p>\n                                            </li>\n                                    \n                                        );\n                                    })}\n                                </ul>\n                                </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                            )}\n                        </Col>\n                       </Row>  \n                    </div>\n\n\n\n                    <div>   \n                        <Row>\n                            <Col>  \n                                    {recents && (\n                                        <Card style={{ width: \"18rem\" }}>\n                                        <Card.Header>Recently Played</Card.Header>\n                                        <ListGroup variant=\"flush\">\n                                            <ListGroup.Item>\n                                <ul>\n                                    {recents.map((tr, index) => {\n                                        return (\n                                            <li key={index}>\n                                                <p>{tr}</p>\n                                            </li>\n                                            \n                                        );\n                                    })}\n                                </ul>\n                                </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                            )}\n                            </Col>\n                            \n                            <Col>\n                                    {vibes && (\n                            <Card style={{ width: \"18rem\" }}>\n                            <Card.Header>Your Vibes</Card.Header>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                <div>\n                                    <p>danceability : {vibes.danceability}</p>\n                                    <p>acousticness : {vibes.acousticness}</p>\n                                    <p>energy : {vibes.energy}</p>\n                                </div>\n                                </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                            )}\n                            </Col>\n                        </Row>  \n                    </div>      \n                    \n\n     </Container>                   \n\n                <br />\n                <br />\n\n        </div>\n    );\n};\n\nexport default Stream;\n"]},"metadata":{},"sourceType":"module"}