{"ast":null,"code":"var _jsxFileName = \"/home/hrithik-gavankar/Hrithik/github_externship/client/dive-BYOI-client/src/Pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from \"../config.json\";\nimport \"./Profile.css\";\nimport { Container, Col, Row, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport userpg from \"./user.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [profilePlayList, setProfilePlayList] = useState([]);\n  const [profileId, setProfileId] = useState(\"\");\n  /* const [profileImage, setProfileImage] =useState(\"\"); */\n\n  const [profileEmail, setProfileEmail] = useState(\"\");\n  const [profileName, setProfileName] = useState(\"\");\n\n  const profileData = async () => {\n    try {\n      /* const res = await axios.get(\"http://localhost:4000/user/profile\"); */\n      const res = await axios.get(config.api.url + \"/user/profile\", {\n        headers: {\n          Authorization: localStorage.getItem(\"jtoken\")\n        }\n      });\n      console.log(res);\n      setProfilePlayList(res.data.profile.playlists);\n      setProfileEmail(res.data.profile.user_email);\n      setProfileName(res.data.profile.user_name);\n      setProfileId(res.data.profile._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    profileData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [window.location.search && new URLSearchParams(window.location.search) && new URLSearchParams(window.location.search).get(\"jtoken\") && localStorage.setItem(\"jtoken\", new URLSearchParams(window.location.search).get(\"jtoken\")), !localStorage.getItem(\"jtoken\") ? window.location.href = \"/login\" : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        margin: \"1rem auto 0.5rem auto\"\n      },\n      children: \" Streams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '25rem',\n            margin: \"2rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: userpg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: `Hi, ${profileName}!`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: `Your unique id is ${profileId}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: `Your email id is ${profileEmail}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            style: {\n              marginLeft: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Playlists\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"list-group-flush\",\n            children: profilePlayList.map((value, key) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              style: {\n                fontSize: \"12\",\n                marginLeft: \"2rem\",\n                marginRight: \"2rem\"\n              },\n              children: value.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"iHF1rtie+rBMKgqsYNd4eNhoF34=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/hrithik-gavankar/Hrithik/github_externship/client/dive-BYOI-client/src/Pages/Profile.js"],"names":["React","useState","useEffect","axios","config","Container","Col","Row","Card","ListGroup","ListGroupItem","userpg","Profile","profilePlayList","setProfilePlayList","profileId","setProfileId","profileEmail","setProfileEmail","profileName","setProfileName","profileData","res","get","api","url","headers","Authorization","localStorage","getItem","console","log","data","profile","playlists","user_email","user_name","_id","error","window","location","search","URLSearchParams","setItem","href","justifyContent","textAlign","margin","width","marginLeft","map","value","key","fontSize","marginRight","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from \"../config.json\";\nimport \"./Profile.css\";\nimport { Container, Col, Row, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport userpg from \"./user.png\"\n\nconst Profile = () => {\n\n    const [profilePlayList, setProfilePlayList] = useState([]);\n    const [profileId, setProfileId] = useState(\"\");\n    /* const [profileImage, setProfileImage] =useState(\"\"); */\n    const [profileEmail, setProfileEmail] = useState(\"\");\n    const [profileName, setProfileName] = useState(\"\");\n\n    const profileData = async () => {\n        try {\n            /* const res = await axios.get(\"http://localhost:4000/user/profile\"); */\n            const res = await axios.get(config.api.url + \"/user/profile\", { headers: { Authorization: localStorage.getItem(\"jtoken\") } })\n            console.log(res);\n            setProfilePlayList(res.data.profile.playlists)\n\n            setProfileEmail(res.data.profile.user_email)\n            setProfileName(res.data.profile.user_name)\n            setProfileId(res.data.profile._id)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        profileData();\n    }, [])\n\n    return (\n        <div className='profile-container'>\n            {\n                window.location.search &&\n                new URLSearchParams(window.location.search) &&\n                (new URLSearchParams(window.location.search).get(\"jtoken\")) &&\n                localStorage.setItem(\"jtoken\", (new URLSearchParams(window.location.search).get(\"jtoken\")))\n            }\n            {\n                !localStorage.getItem(\"jtoken\") ?\n                    window.location.href = \"/login\" : null\n            }\n            <h1 style={{\n                            justifyContent: \"center\",\n                            textAlign: \"center\",\n                            margin: \"1rem auto 0.5rem auto\"\n                        }}\n                        > Streams</h1>\n            <Row>\n                <Col></Col>\n                <Col>\n                    <Card style={{ width: '25rem', margin: \"2rem\" }}>\n                        <Card.Img variant=\"top\" src={userpg} />\n                        <Card.Body>\n                            <Card.Title>{`Hi, ${profileName}!`}</Card.Title>\n                            <Card.Text>{`Your unique id is ${profileId}`}</Card.Text>\n                            <Card.Text>{`Your email id is ${profileEmail}`}</Card.Text>\n                        </Card.Body>\n                        <Card.Text style={{ marginLeft: \"1rem\" }}><strong>Playlists</strong></Card.Text>\n                        <ListGroup className=\"list-group-flush\">\n                            {\n                                profilePlayList.map((value, key) => (\n                                    <ListGroupItem key={key} style={{ fontSize: \"12\", marginLeft: \"2rem\", marginRight: \"2rem\" }}>\n                                        {value.name}\n                                    </ListGroupItem>\n                                ))\n                            }\n                        </ListGroup>\n                    </Card>\n                </Col>\n                <Col></Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default Profile;\n\n\n"]},"metadata":{},"sourceType":"module"}